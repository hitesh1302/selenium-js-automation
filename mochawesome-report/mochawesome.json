{
  "stats": {
    "suites": 2,
    "tests": 7,
    "passes": 4,
    "pending": 0,
    "failures": 3,
    "start": "2025-09-03T10:11:02.641Z",
    "end": "2025-09-03T10:11:54.402Z",
    "duration": 51761,
    "testsRegistered": 7,
    "passPercent": 57.14285714285714,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "234250a4-5203-4392-a182-335da45f4bd6",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0a789c3f-aeba-4846-b644-170e4de9191f",
          "title": "Login page test cases",
          "fullFile": "/Users/acquaint/Selenium-js-automation/selenium-js-automation/test/testcases/login.test.js",
          "file": "/test/testcases/login.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Login page test cases\"",
              "fullTitle": "Login page test cases \"before each\" hook in \"Login page test cases\"",
              "timedOut": false,
              "duration": 1658,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await getDriver();\nloginPage = new LoginPage(driver);\nawait loginPage.open();",
              "err": {},
              "uuid": "a7ff805d-04af-4ad4-9c35-2f1f20b27d3f",
              "parentUUID": "0a789c3f-aeba-4846-b644-170e4de9191f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Login page test cases\"",
              "fullTitle": "Login page test cases \"after each\" hook in \"Login page test cases\"",
              "timedOut": false,
              "duration": 53,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await quitDriver(driver);",
              "err": {},
              "uuid": "dea6e450-45e7-4368-a22d-c9ad318dc04c",
              "parentUUID": "0a789c3f-aeba-4846-b644-170e4de9191f",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Login with valid credentials",
              "fullTitle": "Login page test cases Login with valid credentials",
              "timedOut": false,
              "duration": 5000,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await loginPage.changeToEmail();\nawait loginPage.enterUsername(process.env.VALID_USERNAME);\nawait loginPage.enterPassword(process.env.VALID_PASSWORD);\nawait loginPage.clickLogin();\nconst currentUrl = await driver.getCurrentUrl();\nexpect(currentUrl.includes('/dashboard')).to.be.true;",
              "err": {
                "message": "AssertionError: expected false to be true",
                "estack": "AssertionError: expected false to be true\n    at Context.<anonymous> (test/testcases/login.test.js:39:56)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)",
                "diff": "- false\n+ true\n"
              },
              "uuid": "50e6e51a-b61d-4e4a-9014-8b9cc2fce403",
              "parentUUID": "0a789c3f-aeba-4846-b644-170e4de9191f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login with invalid credentials",
              "fullTitle": "Login page test cases Login with invalid credentials",
              "timedOut": false,
              "duration": 220,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await loginPage.changeToEmail();\nawait loginPage.enterUsername(process.env.INVALID_USERNAME);\nawait loginPage.enterPassword(process.env.INVALID_PASSWORD);\nawait loginPage.clickLogin();\n//const currentUrl = await driver.getCurrentUrl();\n//expect(currentUrl.includes('/dashboard')).to.be.false; \nconst errorMessage = await loginPage.getErrorMessage();\nconsole.log(errorMessage);\nexpect(errorMessage).to.match(/Thông tin Đăng nhập không hợp lệ/);",
              "err": {
                "message": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"span[data-notify=\"message\"]\"}\n  (Session info: chrome=140.0.7339.80)",
                "estack": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"span[data-notify=\"message\"]\"}\n  (Session info: chrome=140.0.7339.80)\n    at Object.throwDecodedError (node_modules/selenium-webdriver/lib/error.js:523:15)\n    at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:524:13)\n    at Executor.execute (node_modules/selenium-webdriver/lib/http.js:456:28)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async Driver.execute (node_modules/selenium-webdriver/lib/webdriver.js:745:17)\n    at async toWireValue (node_modules/selenium-webdriver/lib/webdriver.js:149:15)\n    at async /Users/acquaint/Selenium-js-automation/selenium-js-automation/node_modules/selenium-webdriver/lib/webdriver.js:195:16\n    at async forEachKey (node_modules/selenium-webdriver/lib/webdriver.js:189:9)\n    at async convertKeys (node_modules/selenium-webdriver/lib/webdriver.js:194:3)\n    at async Driver.execute (node_modules/selenium-webdriver/lib/webdriver.js:743:22)",
                "diff": null
              },
              "uuid": "02b9198a-da03-406c-98ec-c79c40277b91",
              "parentUUID": "0a789c3f-aeba-4846-b644-170e4de9191f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login with valid credentials using mobile number",
              "fullTitle": "Login page test cases Login with valid credentials using mobile number",
              "timedOut": false,
              "duration": 285,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await loginPage.selectCountryCode();\nawait loginPage.enterMobileNumber(process.env.VALID_MNUMBER);\nawait loginPage.enterPassword(process.env.VALID_PASSWORD);\nawait loginPage.clickLogin();\nconst currentUrl = await driver.getCurrentUrl();\nexpect(currentUrl.includes('/dashboard')).to.be.true;",
              "err": {
                "message": "AssertionError: expected false to be true",
                "estack": "AssertionError: expected false to be true\n    at Context.<anonymous> (test/testcases/login.test.js:59:56)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)",
                "diff": "- false\n+ true\n"
              },
              "uuid": "a0b65033-4957-4cb6-84c0-8bb7e9138c79",
              "parentUUID": "0a789c3f-aeba-4846-b644-170e4de9191f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login with Invalid mobile number",
              "fullTitle": "Login page test cases Login with Invalid mobile number",
              "timedOut": false,
              "duration": 4726,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await loginPage.selectCountryCode();\nawait loginPage.enterMobileNumber(process.env.INVALID_MNUMBER);\nawait loginPage.enterPassword(process.env.INVALID_PASSWORD);\nawait loginPage.clickLogin();\nconst errorMessage = await loginPage.getErrorMessage();\nexpect(errorMessage).to.match(/Thông tin Đăng nhập không hợp lệ/);",
              "err": {},
              "uuid": "b1ac28cd-83a7-4c28-998a-e6de90bff968",
              "parentUUID": "0a789c3f-aeba-4846-b644-170e4de9191f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b1ac28cd-83a7-4c28-998a-e6de90bff968"
          ],
          "failures": [
            "50e6e51a-b61d-4e4a-9014-8b9cc2fce403",
            "02b9198a-da03-406c-98ec-c79c40277b91",
            "a0b65033-4957-4cb6-84c0-8bb7e9138c79"
          ],
          "pending": [],
          "skipped": [],
          "duration": 10231,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "dea35727-1f8e-4759-8bc5-d1b9345ae1d3",
          "title": "Registration page test cases",
          "fullFile": "/Users/acquaint/Selenium-js-automation/selenium-js-automation/test/testcases/registration.test.js",
          "file": "/test/testcases/registration.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Registration page test cases\"",
              "fullTitle": "Registration page test cases \"before each\" hook in \"Registration page test cases\"",
              "timedOut": false,
              "duration": 2731,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(30000);\ndriver = await getDriver();\nregistrationPage = new RegistrationPage(driver);\nawait registrationPage.open();",
              "err": {},
              "uuid": "c26ce1b1-c67f-4061-96ca-e3b8ef08e463",
              "parentUUID": "dea35727-1f8e-4759-8bc5-d1b9345ae1d3",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Registration page test cases\"",
              "fullTitle": "Registration page test cases \"after each\" hook in \"Registration page test cases\"",
              "timedOut": false,
              "duration": 56,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await quitDriver(driver);",
              "err": {},
              "uuid": "42903067-abdc-459d-bb78-062ec458a1b5",
              "parentUUID": "dea35727-1f8e-4759-8bc5-d1b9345ae1d3",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Register with valid details",
              "fullTitle": "Registration page test cases Register with valid details",
              "timedOut": false,
              "duration": 12892,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const fakeUser = getFakeUser();\nawait registrationPage.enterFullName(fakeUser.name);\nawait registrationPage.selectCountryCode();\nawait registrationPage.enterMobileNumber(fakeUser.phone);\nawait registrationPage.enterEmail(fakeUser.email);\nawait registrationPage.enterPassword(process.env.PASSWORD);\nawait registrationPage.enterConfirmPassword(process.env.CONFIRM_PASSWORD);\nawait registrationPage.acceptTermsAndConditions();\nawait registrationPage.clickRegister();\nconst valiationMessage = await registrationPage.getValidationMessage();\nexpect(valiationMessage).to.match(/Ghi danh thành công. Vui lòng xác minh email của bạn./);",
              "err": {},
              "uuid": "f6274f24-c67f-455e-9c13-b98cf187872b",
              "parentUUID": "dea35727-1f8e-4759-8bc5-d1b9345ae1d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Register with same email and mobile number",
              "fullTitle": "Registration page test cases Register with same email and mobile number",
              "timedOut": false,
              "duration": 6808,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await registrationPage.enterFullName(process.env.FULL_NAME);\nawait registrationPage.selectCountryCode();\nawait registrationPage.enterMobileNumber(process.env.MNUMBER);\nawait registrationPage.enterEmail(process.env.EMAIL_ID);\nawait registrationPage.enterPassword(process.env.PASSWORD);\nawait registrationPage.enterConfirmPassword(process.env.CONFIRM_PASSWORD);\nawait registrationPage.acceptTermsAndConditions();\nawait registrationPage.clickRegister();\nconst ValidationMessage = await registrationPage.getValidationMessage();\nconsole.log(\"Message is: \", ValidationMessage);\nexpect(ValidationMessage).to.match(/Email hoặc số Điện thoại đã tồn tại./);",
              "err": {},
              "uuid": "99c64aba-f0de-4061-bbd6-d1acc2290f7b",
              "parentUUID": "dea35727-1f8e-4759-8bc5-d1b9345ae1d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Register with invalid details",
              "fullTitle": "Registration page test cases Register with invalid details",
              "timedOut": false,
              "duration": 2484,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await registrationPage.enterFullName(process.env.FULL_NAME);\nawait registrationPage.selectCountryCode();\nawait registrationPage.enterMobileNumber(process.env.INVALID_MNUMBER);\nawait registrationPage.enterEmail(process.env.INVALID_EMAIL);\nawait registrationPage.enterPassword(process.env.INVALID_PASSWORD);\nawait registrationPage.enterConfirmPassword(process.env.PASSWORD);\nawait registrationPage.acceptTermsAndConditions();\nawait registrationPage.clickRegister();\nconst currentUrl = await driver.getCurrentUrl();\nexpect(currentUrl.includes('/registration')).to.be.true;",
              "err": {},
              "uuid": "68a8615a-a2df-4235-b0ab-8643748246c4",
              "parentUUID": "dea35727-1f8e-4759-8bc5-d1b9345ae1d3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f6274f24-c67f-455e-9c13-b98cf187872b",
            "99c64aba-f0de-4061-bbd6-d1acc2290f7b",
            "68a8615a-a2df-4235-b0ab-8643748246c4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 22184,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.7.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}